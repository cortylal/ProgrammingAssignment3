install.packages("slidify")
install.packages(c("slidify"))
install.packages("slidify")
install.packages("devtools")
library(devtools)
library(devtools)
find_rtools()
install.packages("KernSmooth")
library("KernSmooth")
getwd()
getwd()
?rnorm
?apply
library(datasets)
data(iris)
?iris
data <- iris
rm(data)
View(iris)
?mapply
apply(split(iris,iris$Species),2,mean(Sepal.Length))
apply(split(iris,iris$Species),2,mean(iris$Sepal.Length))
apply(split(iris,iris$Species),2,mean())
apply(x=split(iris,iris$Species),2,mean())
apply(x=split(iris,iris$Species),2,mean
apply(x=split(iris,iris$Species),2,mean
apply(x=split(iris,iris$Species),2,mean)
apply(x=split(iris,iris$Species),2,FUN=mean)
apply(iris,2,mean)
apply(iris,2,mean,na.rm=TRUE)
colMeans(iris)
colMeans(iris,na.rm=TRUE)
colMeans(iris$Sepal.Length,na.rm=TRUE)
colMeans(iris[,iris$Sepal.Length],na.rm=TRUE)
colMeans(iris[,1], na.rm=TRUE)
colMeans(iris, na.rm=TRUE)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1], 2, mean)
iris[,1]
dim(iris[,1])
dim(iris[101:150,1])
dim(iris[,c(1,5)])
apply(iris[, c(1,5)], 2, mean)
apply(iris[, c(1,5)], 2, mean, na.rm=TRUE)
iris[,c(1,5)]
split(iris[,c(1,5)],iris$Species)
apply(split(iris[,c(1,5)],iris$Species),2,mean)
dim(split(iris[,c(1,5)],iris$Species))
sapply(split(iris[,c(1,5)],iris$Species),2,mean)
sapply(split(iris[,c(1,5)],iris$Species),mean)
sapply(split(iris[,c(1,5)],iris$Species),mean,na.rm=TRUE)
lapply(split(iris[,c(1,5)],iris$Species),mean)
lapply(iris[,c(1,5)], mean)
lapply(iris[,iris$Species], mean)
sub <- subset(iris[,1],iris$Species == "virginica")
sub <- subset(iris,iris$Species == "virginica")
View(sub)
colMeans(sub, na.rm=TRUE)
colMeans(sub[,1:4], na.rm=TRUE)
library(datasets)
data(mtcars)
mtcars
?mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
apply(mtcars, 2, mean)
split(mtcars, mtcars$cyl)
lapply(mtcars, mean)\
lapply(mtcars, mean)
sub2 <- split(mtcars$mpg, mtcars$cyl)
sub2
View(mtcars)
sapply(sub@, mean)
sapply(sub2, mean)
View(iris)
sub3 <- split(iris$Sepal.Length, iris$Species)
sub3
sapply(sub3, mean)
sub4 <- split(mtcars$hp, mtcars$cyl)
sub4
sapply(sub4, mean)
res <- sapply(sub4, mean)
abs(res[1], res[3])
abs(res[1] - res[3])
debug(ls)
ls()
D
exit
exit()
quit()
undebug(ls)
quit()
getwd()
setwd("~/Coursera/2_R-Programming//ProgrammingAssignment3-Hospital-Quality")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
nrow(outcome)
names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
state <- TX
state <- "TX"
state %in% outcome$State
state <- "tfd"
state %in% outcome$State
stop("error")
if (state %in% outcome$State) {stop("error")}
if !(state %in% outcome$State) {stop("error")}
if (state !%in% outcome$State) {stop("error")}
if (!(state %in% outcome$State)) {stop("error")}
source("best.R")
source("best.R")
best("TX", "heart failure")
best("TX4", "heart failure")
best("TX", "hert failure")
top_values <- head(outcome)
sorted_top_values <- top_values[order(top_values$Hospital\Name),]
names(top_values)
sorted_top_values <- top_values[order(top_values$Hospital.Name),]
View(top_values)
View(sorted_top_values)
?sort
print(sorted_top_values$Hospital.Name)
print(sorted_top_values$Hospital.Name[1])
print(sorted_top_values$Hospital.Name[3])
nrow(sorted_top_values)
View(outcome)
min(NA,12,2)
min(NA,12,2,12)
min(12,2,12)
min(12,2,12,2)
?min
min(top_values$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
min(top_values$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, na.rm=TRUE)
?subset
?select
state <- "TX"
state_outcome <- subset(outcome, subset = outcome$State == state)
View(state_outcome)
outcome <- "heart failure"
?cat
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from.", outcome, sep = ".")
outcome_column_name
strsplit(outcome)
strsplit(outcome, " ")
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from.", strsplit(outcome, " "), sep = ".")
outcome_column_name
paste(strsplit(outcome, " "))
cat(strsplit(outcome, " "))
cat(as.vector(strsplit(outcome, " ")))
paste(c(strsplit(outcome, " "))
paste(c(strsplit(outcome, " "))
paste(c(strsplit(outcome, " ")))
paste(strsplit(outcome, " "), sep="", collapse="")
simplecap(outcome)
simpleCap(outcome)
?simpleCap
?toupper
.simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")
}
.simpleCap(outcome)
.simpleCap("penu")
?paste
paste(outcome,sep = ".", collapse =" ")
paste(outcome,sep = ".", collapse ="")
?gsub
gsub(" ",".", outcome)
outcome_syntaxed <- .simpleCap(outcome)
outcome_syntaxed <- gsub(" ",".", outcome_syntaxed)
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from.", outcome_syntaxed, sep = ".")
outcome_column_name
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from", outcome_syntaxed, sep = ".")
outcome_column_name
top_outcome <- as.vector(top_values[Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 18.1,Hospital.Name])
top_outcome <- as.vector(top_values[Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 18.1,top_values$Hospital.Name])
top_outcome <- as.vector(top_values[top_outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 18.1,top_values$Hospital.Name])
top_outcome <- as.vector(top_values[top_values$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 18.1,top_values$Hospital.Name])
top_outcome <- as.vector(top_values[,top_values$Hospital.Name])
top_outcome <- as.vector(top_values[,Hospital.Name])
top_outcome <- as.vector(top_values[,"Hospital.Name"])
top_outcome
top_outcome <- as.vector(top_values[top_values$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 18.1,"Hospital.Name"])
top_outcome
top_outcome <- top_values[top_values$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 18.1,"Hospital.Name"]
top_outcome
top_outcome <- top_values[top_values$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 14.3,"Hospital.Name"]
top_outcome
top_outcome <- top_values[top_values$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 14.3,"Hospital.Name", na.rm=TRUE]
top_outcome <- as.vector(top_values[top_values$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack == 18.1,"Hospital.Name"], na.rm = TRUE)
rm(list=ls())
closeAllConnections()
getwd()
source("best.R")
best("TX", "heart attack")
best("BB", "heart attack")
best("NY", "hert attack")
best("MD", "pneumonia")
complete_outcome <- read.csv("outcome-of-care-measures.csv")
state <- "TX"
outcome <- "heart attack"
state_outcome <- subset(complete_outcome, subset = complete_outcome$State == state)
outcome_syntaxed <- .simpleCap(outcome)
outcome_syntaxed <- gsub(" ",".", outcome_syntaxed)
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from", outcome_syntaxed, sep = ".")
wanted_data <- state_outcome[,c("Hospital.Names", outcome_column_name)]
View(state_outcome)
wanted_data <- state_outcome[,c("Hospital.Names", "outcome_column_name")]
wanted_data <- state_outcome[,c("Hospital.Names")]
wanted_data <- state_outcome[,"Hospital.Names"]
wanted_data <- state_outcome[,c(Hospital.Names, outcome_column_name)]
wanted_data <- state_outcome[,c("Hospital.Name", "outcome_column_name")]
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
rm(list=ls())
closeAllConnections()
source("best.R")
best("MD", "pneumonia")
source("best.R")
best("MD", "pneumonia")
a <- c("a", "z", "h")
order(a)
sorted <- order(a)
sorted <- sort(a)
sort
sorted
source("best.R")
best("MD", "pneumonia")
source("best.R")
best("MD", "pneumonia")
complete_outcome <- read.csv("outcome-of-care-measures.csv")
state <- "MD"
outcome <- "pneumonia"
state_outcome <- subset(complete_outcome, subset = complete_outcome$State == state)
outcome_syntaxed <- .simpleCap(outcome)
outcome_syntaxed <- gsub(" ",".", outcome_syntaxed)
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from", outcome_syntaxed, sep = ".")
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
View(wanted_data)
min_death_rate <- min(wanted_data$outcome_column_name, na.rm=TRUE)
min_death_rate <- min(wanted_data$outcome_column_name)
min_death_rate <- min(wanted_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, na.rm=TRUE)
min(wanted_data)
min(wanted_data[,])
min(wanted_data[,2])
min(as.number(wanted_data[,2])
min(as.number(wanted_data[,2])
min(as.number(wanted_data[,2]))
min(as.numeric(wanted_data[,2]))
min(as.numeric(wanted_data[,Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia]))
min(wanted_data[,Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia])
min(wanted_data[,wanted_data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia])
min(wanted_data[,2])
min(as.numeric(as.character(wanted_data[,2])))
min_death_rate <- min(as.numeric(as.character(wanted_data[,outcome_column_name])), na.rm=TRUE)
top_outcome <- wanted_data[wanted_data$outcome_column_name == min_death_rate,"Hospital.Name"]
top_outcome
top_outcome <- as.factor(wanted_data[wanted_data$outcome_column_name == min_death_rate,"Hospital.Name"])
top_outcome <- as.vector(wanted_data[wanted_data$outcome_column_name == min_death_rate,"Hospital.Name"])
top_outcome <- wanted_data[wanted_data$outcome_column_name = min_death_rate,"Hospital.Name"]
top_outcome <- wanted_data[wanted_data$outcome_column_name == min_death_rate,"Hospital.Name"]
top_outcome <- wanted_data[wanted_data$outcome_column_name == min_death_rate, wanted_data$Hospital.Name]
top_outcome <- wanted_data[wanted_data$outcome_column_name == 7.4, wanted_data$Hospital.Name]
top_outcome <- wanted_data[wanted_data$outcome_column_name == 7.4, "Hospital.Name"]
top_outcome <- wanted_data[outcome_column_name == 7.4, "Hospital.Name"]
top_outcome <- wanted_data[as.numeric(as.character(outcome_column_name)) == 7.4, "Hospital.Name"]
top_outcome <- wanted_data[as.numeric(as.character(wanted_data$outcome_column_name)) == 7.4, "Hospital.Name"]
top_outcome <- wanted_data[as.numeric(as.character(wanted_data[,outcome_column_name])) == 7.4, "Hospital.Name"]
top_outcome
top_outcome2 <- wanted_data[as.numeric(as.character(wanted_data[,outcome_column_name])) == 7.4, "Hospital.Name"]
top_outcome2
top_outcome2 <- as.vector(top_outcome)
top_outcome2
rm(list=ls())
closeAllConnections()
source("best.R")
best("MD", "pneumonia")
best("MD", "heart attack")
best("TX", "heart failure")
best("TX", "heart attack")
complete_outcome <- read.csv("outcome-of-care-measures.csv")
state <- "TX"
outcome <- "heart attack"
state_outcome <- subset(complete_outcome, subset = complete_outcome$State == state)
outcome_syntaxed <- .simpleCap(outcome)         ## toupper every first letter of a sentence
outcome_syntaxed <- gsub(" ",".", outcome_syntaxed)      ## Replacing spaces with dotes
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from", outcome_syntaxed, sep = ".")
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
min_death_rate <- min(as.numeric(as.character(wanted_data[,outcome_column_name])), na.rm=TRUE)
View(wanted_data)
top_outcome <- as.vector(wanted_data[as.numeric(as.character(wanted_data[,outcome_column_name])) == min_death_rate, "Hospital.Name"])
wanted_data <- state_outcome[outcome_column_name != is.na(outcome_column_name),c("Hospital.Name", outcome_column_name)]
wanted_data <- state_outcome[outcome_column_name != is.na(outcome_column_name),c("Hospital.Name", outcome_column_name)]
wanted_data <- state_outcome[complete.cases(state_outcome),c("Hospital.Name", outcome_column_name)]
wanted_data <- state_outcome[!is.na(state_outcome[,outcome_column_name]),c("Hospital.Name", outcome_column_name)]
View(wanted_data)
wanted_data <- state_outcome[is.na(state_outcome[,outcome_column_name]),c("Hospital.Name", outcome_column_name)]
View(wanted_data)
?na.omit
wanted_data <- state_outcome[na.omit(state_outcome[,outcome_column_name]),c("Hospital.Name", outcome_column_name)]
wanted_data <- state_outcome[!na.omit(state_outcome[,outcome_column_name]),c("Hospital.Name", outcome_column_name)]
wanted_data <- state_outcome[!(is.na(state_outcome[,outcome_column_name])),c("Hospital.Name", outcome_column_name)]
wanted_data <- state_outcome[!(is.na(state_outcome$outcome_column_name)),c("Hospital.Name", outcome_column_name)]
wanted_data <- state_outcome[!is.na(state_outcome$outcome_column_name),c("Hospital.Name", outcome_column_name)]
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[!is.na(wanted_data$outcome_column_name),c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[!is.na(wanted_data$outcome_column_name),]
wanted_data <- wanted_data[(!is.na(wanted_data)),]
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[(!is.na(wanted_data)),]
View(wanted_data)
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[(!is.na(wanted_data$outcome_column_name)),]
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[(!is.na(wanted_data[,outcome_column_name])),]
View(wanted_data)
wanted_data[,$]
wanted_data[,4]
wanted_data[,2]
is.numeric(NA)
is.numeric(2)
is.numeric(Not Available)
is.numeric("Not Available")
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[(!is.numeric(wanted_data[,outcome_column_name])),]
wanted_data <- wanted_data[(!is.numeric(wanted_data)),]
View(wanted_data)
wanted_data <- wanted_data[!is.numeric(wanted_data),]
wanted_data <- wanted_data[is.numeric(wanted_data),]
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[is.numeric(wanted_data[,outcome_column_name]),]
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[!is.na(as.numeric(as.character((wanted_data[,outcome_column_name])))),]
View(wanted_data)
wanted_data <- wanted_data[!is.na(as.numeric(as.character(wanted_data[,outcome_column_name]))),]
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[!is.na(as.numeric(as.character(wanted_data[,outcome_column_name]))),]
rm(list=ls())
closeAllConnections()
source("best.R")
best("TX", "heart attack")
best("MD", "heart attack")
best("NY", "hert attack")
best("MD", "pneumonia")
complete_outcome <- read.csv("outcome-of-care-measures.csv")
state_outcome <- subset(complete_outcome, subset = complete_outcome$State == state)
state <- "TX"
outcome <- "heart attack"
state_outcome <- subset(complete_outcome, subset = complete_outcome$State == state)
outcome_syntaxed <- .simpleCap(outcome)         ## toupper every first letter of a sentence
outcome_syntaxed <- gsub(" ",".", outcome_syntaxed)      ## Replacing spaces with dotes
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from", outcome_syntaxed, sep = ".")
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[as.numeric(as.character(wanted_data[,outcome_column_name])),]
min_death_rate <- min(as.numeric(as.character(wanted_data[,outcome_column_name])), na.rm=TRUE)
top_outcome <- as.vector(wanted_data[as.numeric(as.character(wanted_data[,outcome_column_name])) == min_death_rate, "Hospital.Name"])
if (length(top_outcome) > 1) {
sorted_names <- sort(top_outcome)
return(sorted_names[1])
}
return(top_outcome)
if (length(top_outcome) > 1) {
sorted_names <- sort(top_outcome)
return(sorted_names[1])
}
View(wanted_data)
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
View(wanted_data)
wanted_data <- wanted_data[as.numeric(as.character(wanted_data[,outcome_column_name])),]
View(wanted_data)
wanted_data <- wanted_data[complete.cases(wanted_data)]
View(wanted_data)
wanted_data <- wanted_data[complete.cases(wanted_data),]
View(wanted_data)
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[as.numeric(as.character(wanted_data[,outcome_column_name])),]
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
View(wanted_data)
wanted_data <- wanted_data[complete.cases(wanted_data),]
View(wanted_data)
complete_outcome <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
View(complete_outcome)
state_outcome <- subset(complete_outcome, subset = complete_outcome$State == state)
outcome_syntaxed <- .simpleCap(outcome)         ## toupper every first letter of a sentence
outcome_syntaxed <- gsub(" ",".", outcome_syntaxed)      ## Replacing spaces with dotes
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from", outcome_syntaxed, sep = ".")
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[!is.na(as.numeric(as.character(wanted_data[,outcome_column_name]))),]
View(wanted_data)
min_death_rate <- min(as.numeric(as.character(wanted_data[,outcome_column_name])))
top_outcome <- as.vector(wanted_data[as.numeric(as.character(wanted_data[,outcome_column_name])) == min_death_rate, "Hospital.Name"])
return(top_outcome)
rm(list=ls())
closeAllConnections()
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
complete_outcome <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
state <- "TX"
outcome <- "heart failure"
state_outcome <- subset(complete_outcome, subset = complete_outcome$State == state)
outcome_syntaxed <- .simpleCap(outcome)         ## toupper every first letter of a sentence
outcome_syntaxed <- gsub(" ",".", outcome_syntaxed)      ## Replacing spaces with dotes
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from", outcome_syntaxed, sep = ".")
outcome <- "heart attack"
state_outcome <- subset(complete_outcome, subset = complete_outcome$State == state)
outcome_column_name <- .simpleCap(outcome)
outcome_column_name <- gsub(" ",".", outcome_column_name)
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from", outcome_column_name, sep = ".")
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[!is.na(as.numeric(as.character(wanted_data[,outcome_column_name]))),]
min_death_rate <- min(as.numeric(as.character(wanted_data[,outcome_column_name])))
top_outcome <- as.vector(wanted_data[as.numeric(as.character(wanted_data[,outcome_column_name])) == min_death_rate, "Hospital.Name"])
length(top_outcome
)
rm(list=ls())
closeAllConnections()
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
wanted_data <- data.frame()
wanted_data <- data.frame(Hospital.Name = character(0), Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack = numeric(0))
View(wanted_data)
wanted_data[1,] <- c("CYPRESS FAIRBANKS MEDICAL CENTER", 5)
View(wanted_data)
wanted_data[1,] <- "CYPRESS FAIRBANKS MEDICAL CENTER"
wanted_data[1,] <- as.caracter"CYPRESS FAIRBANKS MEDICAL CENTER"
wanted_data[1,] <- as.caracter("CYPRESS FAIRBANKS MEDICAL CENTER")
wanted_data[1,] <- as.character("CYPRESS FAIRBANKS MEDICAL CENTER")
View(wanted_data)
View(wanted_data)
wanted_data <- data.frame()
View(wanted_data)
wanted_data <- data.frame(Hospital.Name = character(0), Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack = numeric(0))
View(wanted_data)
wanted_data[1,] <- c(as.character("CYPRESS FAIRBANKS MEDICAL CENTER"), 5)
View(wanted_data)
rm(list=ls())
closeAllConnections()
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("TX", "pneumonia")
best("MD", "pneumonia")
best("AL", "pneumonia")
best("AK", "pneumonia")
best("AZ", "pneumonia")
best("IA", "pneumonia")
best("MA", "pneumonia")
complete_outcome <- read.csv("outcome-of-care-measures.csv", na.strings = "Not Available")
state <- "MA"
outcome <- "pneumonia"
state_outcome <- subset(complete_outcome, subset = complete_outcome$State == state)
outcome_column_name <- .simpleCap(outcome)         ## toupper every first letter of a sentence
outcome_column_name <- gsub(" ",".", outcome_column_name)      ## Replacing spaces with dotes
outcome_column_name <- paste("Hospital.30.Day.Death..Mortality..Rates.from", outcome_column_name, sep = ".")
wanted_data <- state_outcome[,c("Hospital.Name", outcome_column_name)]
wanted_data <- wanted_data[!is.na(as.numeric(as.character(wanted_data[,outcome_column_name]))),]
View(state_outcome)
View(wanted_data)
min_death_rate <- min(as.numeric(as.character(wanted_data[,outcome_column_name])))
top_outcome <- as.vector(wanted_data[as.numeric(as.character(wanted_data[,outcome_column_name])) == min_death_rate, "Hospital.Name"])
if (length(top_outcome) > 1) {
print(length(top_outcome))
sorted_names <- sort(top_outcome)}
best("MA", "pneumonia")
source("best.R")
best("MA", "pneumonia")
best("AZ", "pneumonia")
wanted_data <- wanted_data[!is.na(as.numeric(as.character(wanted_data[,outcome_column_name]))),]
best("TX", "pneumonia")
rm(list=ls())
closeAllConnections()
getwd()
source("best.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
2
submit()
submit()
